let G={I:"Info",W:"Warning",E:"Error",target:function(a){if("string"==typeof a){let b=document.querySelectorAll(a);if(1<=b.length){let c=new grenade(b);return c}G.logger(G.E,"no target selected")}else G.logger(G.E,"wrong type of target selector")},logger:function(a,b){let c=new Date,e="["+c.toLocaleString()+"]",f="["+a+"]";a===G.I?console.info(e,f,b):a===G.W?console.warn(e,f,b):a===G.E&&console.error(e,f,b)}};class grenade{constructor(a){this.hrefNode=["A"],this.srcNode=["IMG","VIDEO","IFRAME"],this.valueNode=["INPUT","OPTION"],this.renderer=function(b,c){if("object"!=typeof c)this.srcNode.includes(b.tagName)?b.setAttribute("src",c):this.hrefNode.includes(b.tagName)?b.setAttribute("href",c):this.valueNode.includes(b.tagName)?b.setAttribute("value",c):b.innerHTML=c;else{const d="data-"+c.key;b.setAttribute(d,c.value)}},a instanceof NodeList?this.list=a:G.logger(G.E,"wrong type of target to throw")}throw(a,b=!1){if(!(a!==void 0))G.logger(G.E,"No data in grenade");else if(Array.isArray(a)){if(!1===b)for(let c of this.list){let d=-1,e=a.length,f=c.querySelectorAll(".g-node");for(let g of f)d=(d+1)%e,this.renderer(g,a[d])}else for(let c of this.list){let d=0,e=null,f=c;if(-1!==c.className.indexOf("g-generate")){c.parentNode.removeChild(c);continue}for(let g of a){let h=f.cloneNode(!0);d!=a.length-1&&(f.className+=" g-generate",f.parentElement.insertBefore(h,f.nextSibling));let i=f.querySelectorAll(".g-node");for(let j of i){let k=j.getAttribute("g-key");if("$index"===k)this.renderer(j,d+1);else if(k.startsWith("$data")){const l=k.split(":")[1],m=g[l];this.renderer(j,{key:l,value:m})}else this.renderer(j,g[k])}e=f,f=h,d++}}}else if("object"==typeof a)for(let c of this.list){let d=c.querySelectorAll(".g-node");for(let e of d){let f=e.getAttribute("g-key");this.renderer(e,a[f])}}else G.logger(G.E,"Not supported data type for grenade")}}
